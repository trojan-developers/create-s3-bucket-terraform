name: Create S3 Bucket

on:
  workflow_dispatch:
    inputs:
      bucket_name:
        description: 'S3 Bucket name'
        required: true
      port_context:
        description: 'Port context object (includes runId)'
        required: true

permissions:
  contents: write
  pull-requests: write
  actions: read

env:
  BASE_TF_DIR: resources
  BRANCH_PREFIX: create-s3
  MAIN_BRANCH: main

jobs:
  start:
    runs-on: ubuntu-latest
    outputs:
      port_run_id: ${{ steps.extract_run_id.outputs.PORT_RUN_ID }}
    steps:
      - name: Extract Port Run ID
        id: extract_run_id
        run: |
          PORT_RUN_ID=$(echo '${{ github.event.inputs.port_context }}' | jq -r '.run_id')
          echo "PORT_RUN_ID=$PORT_RUN_ID" >> $GITHUB_ENV
          echo "PORT_RUN_ID=$PORT_RUN_ID" >> $GITHUB_OUTPUT

      - name: Log start to Port
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          logMessage: "ðŸš€ Starting S3 bucket creation for `${{ github.event.inputs.bucket_name }}`"

  create-pr:
    runs-on: ubuntu-latest
    needs: start
    outputs:
      pr_url: ${{ steps.create_pr.outputs.pull-request-url }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Validate Bucket Name
        run: |
          BUCKET_NAME="${{ github.event.inputs.bucket_name }}"
          if [[ ! "$BUCKET_NAME" =~ ^[a-z0-9][a-z0-9.-]*[a-z0-9]$ ]]; then
            echo "Invalid bucket name format"
            exit 1
          fi
          if [[ ${#BUCKET_NAME} -lt 3 || ${#BUCKET_NAME} -gt 63 ]]; then
            echo "Bucket name must be between 3 and 63 characters"
            exit 1
          fi

      - name: Generate Terraform Files
        run: |
          BUCKET_NAME="${{ github.event.inputs.bucket_name }}"
          TF_DIR="${{ env.BASE_TF_DIR }}/$BUCKET_NAME"
          mkdir -p "$TF_DIR"

          # Check if template exists
          if [[ ! -f "templates/s3-bucket-static.tf" ]]; then
            echo "Template file not found: templates/s3-bucket-static.tf"
            exit 1
          fi

          # Generate main.tf from template
          sed "s/{{ bucket_name }}/$BUCKET_NAME/g" "templates/s3-bucket-static.tf" > "$TF_DIR/main.tf"

          # Generate backend.tf for remote state
          cat <<EOF > "$TF_DIR/backend.tf"
          terraform {
            backend "s3" {
              bucket         = "${{ secrets.TF_STATE_BUCKET }}"
              key            = "s3/$BUCKET_NAME/terraform.tfstate"
              region         = "${{ secrets.AWS_DEFAULT_REGION }}"
              dynamodb_table = "${{ secrets.TF_LOCK_TABLE }}"
              encrypt        = true
            }
          }
          EOF

          # Generate variables.tf
          cat <<EOF > "$TF_DIR/variables.tf"
          variable "bucket_name" {
            description = "Name of the S3 bucket"
            type        = string
            default     = "$BUCKET_NAME"
          }
          EOF

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_PAT }}
          commit-message: "feat: add S3 bucket ${{ github.event.inputs.bucket_name }}"
          branch: ${{ env.BRANCH_PREFIX }}-${{ github.event.inputs.bucket_name }}-${{ github.run_id }}
          base: ${{ env.MAIN_BRANCH }}
          title: "feat: Create S3 bucket `${{ github.event.inputs.bucket_name }}`"
          body: |
            ## S3 Bucket Creation Request
            
            This PR adds a new S3 bucket using Terraform.
            
            ### Details
            - **Bucket Name:** `${{ github.event.inputs.bucket_name }}`
            - **Created by:** GitHub Actions (Port integration)
            - **Port Run ID:** ${{ needs.start.outputs.port_run_id }}
            
            ### Files Added
            - `${{ env.BASE_TF_DIR }}/${{ github.event.inputs.bucket_name }}/main.tf`
            - `${{ env.BASE_TF_DIR }}/${{ github.event.inputs.bucket_name }}/backend.tf`
            - `${{ env.BASE_TF_DIR }}/${{ github.event.inputs.bucket_name }}/variables.tf`

      - name: Log PR to Port
        if: steps.create_pr.outputs.pull-request-url
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.us.getport.io
          operation: PATCH_RUN
          runId: ${{ needs.start.outputs.port_run_id }}
          logMessage: "ðŸ“¥ Created PR for S3 bucket: ${{ steps.create_pr.outputs.pull-request-url }}"
          link: "[\"${{ steps.create_pr.outputs.pull-request-url }}\"]"

  merge-pr:
    runs-on: ubuntu-latest
    needs: create-pr
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Merge Pull Request
        run: |
          gh pr merge --admin --squash "${{ needs.create-pr.outputs.pr_url }}"
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

  apply-terraform:
    runs-on: ubuntu-latest
    needs: [merge-pr, start, create-pr]
    steps:
      - name: Clone and Pull Updated Main
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git clone https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }} repo
          cd repo
          git checkout main
          git pull origin main
          echo "REPO_PATH=$(pwd)/repo" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Log apply start to Port
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.us.getport.io
          operation: PATCH_RUN
          runId: ${{ needs.start.outputs.port_run_id }}
          logMessage: "ðŸ”§ Starting terraform apply for S3 bucket `${{ github.event.inputs.bucket_name }}`"

      - name: Terraform Init & Apply    
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          BUCKET_NAME="${{ github.event.inputs.bucket_name }}"
          TF_DIR="$GITHUB_WORKSPACE/repo/${{ env.BASE_TF_DIR }}/$BUCKET_NAME"
          cd "$TF_DIR"
          terraform init
          terraform plan
          terraform apply -auto-approve

      - name: Finalize in Port
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.us.getport.io
          operation: PATCH_RUN
          runId: ${{ needs.start.outputs.port_run_id }}
          status: "SUCCESS"
          summary: "âœ… S3 bucket `${{ github.event.inputs.bucket_name }}` created"
          logMessage: "ðŸ“¦ Terraform applied S3 bucket"
          link: "[\"https://s3.console.aws.amazon.com/s3/buckets/${{ github.event.inputs.bucket_name }}\", \"${{ needs.create-pr.outputs.pr_url }}\"]"